plugins {
    id("java-gradle-plugin")
    id 'org.jetbrains.kotlin.jvm'
    id("com.github.gmazzo.buildconfig") version "3.1.0"
    id("maven-publish")
    id("com.gradle.plugin-publish") version "1.2.0"
    id "org.jetbrains.dokka"
}

def completeKspVersion = kspVersion.contains("-") ? kspVersion : "${kotlin_version}-${kspVersion}"

dependencies {
    implementation("org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version")
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    implementation("io.lionweb.lionweb-java:lionweb-java-core:$lionwebVersion")
    api(project(":lionweb-gen"))
    testImplementation(project(":lionweb-ksp"))
    testImplementation("org.jetbrains.kotlin:kotlin-test-junit5:$kotlin_version")
    testImplementation("org.junit.jupiter:junit-jupiter:5.7.1")
    implementation("com.google.code.gson:gson:$gson_version")
    implementation("com.google.devtools.ksp:com.google.devtools.ksp.gradle.plugin:$completeKspVersion")
}

buildConfig {
    packageName("com.strumenta.kolasu.lionwebgen")
    buildConfigField("String", "PLUGIN_ID", "\"${lionwebGenGradlePluginID}\"")
    buildConfigField("String", "PLUGIN_GROUP", "\"${project.group}\"")
    buildConfigField("String", "PLUGIN_NAME", "\"${project.name}\"")
    buildConfigField("String", "PLUGIN_VERSION", "\"${project.version}\"")
    buildConfigField("String", "LIONCORE_VERSION", "\"${project.lionwebVersion}\"")
}

gradlePlugin {
    website.set("https://github.com/strumenta/kolasu")
    vcsUrl.set("https://github.com/strumenta/kolasu.git")
    plugins {
        create("lionwebGenGradlePlugin") {
            id = lionwebGenGradlePluginID as String
            displayName = "Kolasu LionWeb Gen"
            description = "Kolasu LionWeb Gen"
            tags.set(["parsing", "ast", "starlasu", "lionweb"])
            implementationClass = "com.strumenta.kolasu.lionwebgen.LionWebGradlePlugin"
        }
    }
}

tasks.named("compileKotlin") {
    dependsOn("generateBuildConfig")
}

test {
    useJUnitPlatform()
}

tasks.findByName("dokkaJavadoc").dependsOn("generateBuildConfig")
tasks.findByName("dokkaJavadoc").dependsOn(":core:compileKotlin")
tasks.findByName("dokkaJavadoc").dependsOn(":emf:compileKotlin")
tasks.findByName("dokkaJavadoc").dependsOn(":lionweb:jar")
tasks.findByName("dokkaJavadoc").dependsOn(":lionweb-gen:jar")

java {
    sourceCompatibility = "$jvm_version"
    targetCompatibility = "$jvm_version"
    registerFeature('cli') {
        usingSourceSet(sourceSets.main)
    }
}

//publishing {
//
//    repositories {
//        maven {
//            def releaseRepo = "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
//            def snapshotRepo = "https://oss.sonatype.org/content/repositories/snapshots/"
//            url = isReleaseVersion ? releaseRepo : snapshotRepo
//            credentials {
//                username = project.hasProperty('ossrhUsername') ? ossrhUsername : "Unknown user"
//                password = project.hasProperty('ossrhPassword') ? ossrhPassword : "Unknown password"
//            }
//        }
//    }
//
////    publications {
////        kolasu_lionweb(MavenPublication) {
////            from components.java
////            artifactId "kolasu-" + project.name
////            artifact sourcesJar
////            artifact javadocJar
////            suppressPomMetadataWarningsFor('cliApiElements')
////            suppressPomMetadataWarningsFor('cliRuntimeElements')
////            pom {
////                name = "kolasu-" + project.name
////                description = "Gradle plugin for the integration of Kolasu with LIonWeb"
////                version = project.version
////                packaging = 'jar'
////                url = 'https://github.com/Strumenta/kolasu'
////
////                scm {
////                    connection = 'scm:git:https://github.com/Strumenta/kolasu.git'
////                    developerConnection = 'scm:git:git@github.com:Strumenta/kolasu.git'
////                    url = 'https://github.com/Strumenta/kolasu.git'
////                }
////
////                licenses {
////                    license {
////                        name = 'Apache Licenve V2.0'
////                        url = 'https://www.apache.org/licenses/LICENSE-2.0'
////                        distribution = 'repo'
////                    }
////                }
////
////                developers {
////                    developer {
////                        id = 'ftomassetti'
////                        name = 'Federico Tomassetti'
////                        email = 'federico@strumenta.com'
////                    }
////                    developer {
////                        id = 'alessiostalla'
////                        name = 'Alessio Stalla'
////                        email = 'alessio.stalla@strumenta.com'
////                    }
////                    developer {
////                        id = 'lorenzoaddazi'
////                        name = 'Lorenzo Addazi'
////                        email = 'lorenzo.addazi@strumenta.com'
////                    }
////                }
////
////            }
////        }
////    }
//}