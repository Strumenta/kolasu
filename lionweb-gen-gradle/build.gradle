plugins {
    id("java-gradle-plugin")
    //id("org.gradle.kotlin.kotlin-dsl") version "4.0.14"
    id 'org.jetbrains.kotlin.jvm'
    id("com.github.gmazzo.buildconfig") version "3.1.0"
    id("maven-publish")
    id("com.gradle.plugin-publish") version "1.2.0"
    id "org.jetbrains.dokka"
}

dependencies {
    implementation("org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version")
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    implementation("io.lionweb.lioncore-java:lioncore-java-core-fat:$lionwebVersion")
    api(project(":lionweb-gen"))
    testImplementation("org.jetbrains.kotlin:kotlin-test-junit5:$kotlin_version")
    testImplementation("org.junit.jupiter:junit-jupiter:5.7.1")
    implementation("com.google.code.gson:gson:$gson_version")
    implementation("com.google.devtools.ksp:com.google.devtools.ksp.gradle.plugin:$kotlin_version-$kspVersion")

}

buildConfig {
    packageName("com.strumenta.kolasu.lionwebgen")
    buildConfigField("String", "PLUGIN_ID", "\"${lionwebGenGradlePluginID}\"")
    buildConfigField("String", "PLUGIN_GROUP", "\"${project.group}\"")
    buildConfigField("String", "PLUGIN_NAME", "\"${project.name}\"")
    buildConfigField("String", "PLUGIN_VERSION", "\"${project.version}\"")
}

gradlePlugin {
    plugins {
        create("lionwebGenGradlePlugin") {
            id = lionwebGenGradlePluginID as String
            displayName = "Kolasu LionWeb Gen"
            description = "Kolasu LionWeb Gen"
            implementationClass = "com.strumenta.kolasu.lionwebgen.LionWebGradlePlugin"
        }
    }
}

tasks.named("compileKotlin") {
    dependsOn("generateBuildConfig")
}

test {
    useJUnitPlatform()
}